# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions
name: Build

on:
  push:
    branches:
    - '**'
    tags-ignore:
    - '**'
    paths-ignore:
    - '**/*.adoc'
    - '**/*.md'
    - '.github/*.yml'
  pull_request:
  workflow_dispatch:
    # https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/

defaults:
  run:
    shell: bash

env:
  TEST_SSH_HOST: 127.0.0.1
  TEST_SSH_PORT: 2222
  TEST_SSH_USER: testuser
  TEST_SSH_KEY_FILE: test/id_key.txt
  TEST_SSH_PUB_FILE: test/id_pub.txt
  TEST_SSH_PW: MySuperPW123

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: "Create Windows testuser for SSH"
      shell: powershell
      run: |
        $username = "${{ env.TEST_SSH_USER }}"
        $password = "${{ env.TEST_SSH_PW }}"
        $passwordEncrypted = ConvertTo-SecureString $password -AsPlainText -Force
        New-LocalUser -Name $username -Password $passwordEncrypted

    - run: choco install openssh psexec --no-progress

    - run: |
        set -eux

        chmod 400 $(pwd)/test/*
        #powershell -ExecutionPolicy Bypass -File $PROGRAMFILES/OpenSSH-Win64/install-sshd.ps1
        "$PROGRAMFILES/OpenSSH-Win64/ssh-keygen" -A # generate host keys
        #powershell -ExecutionPolicy Bypass -Command '. .\FixHostFilePermissions.ps1 -Confirm:$false'

        cat <<EOF > $ProgramData/ssh/sshd_config
        ListenAddress ${{ env.TEST_SSH_HOST }}
        Port ${{ env.TEST_SSH_PORT }}
        PermitRootLogin no
        StrictModes no
        PubkeyAuthentication yes
        IgnoreUserKnownHosts yes
        PasswordAuthentication yes
        PermitEmptyPasswords no
        match User ${{ env.TEST_SSH_USER }}
            AuthorizedKeysFile $(pwd)/${{ env.TEST_SSH_PUB_FILE }}
        EOF

        psexec -accepteula -s "$PROGRAMFILES/OpenSSH-Win64/sshd" -ddd &

        curl -fL -o klink.exe http://www.9bis.net/kitty/files/klink.exe
        echo y | ./klink.exe ${{ env.TEST_SSH_USER }}@${{ env.TEST_SSH_HOST }} \
          -auto-store-sshkey \
          -pw ${{ env.TEST_SSH_PW }} \
          -P ${{ env.TEST_SSH_PORT }} \
          "whoami"