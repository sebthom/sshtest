# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions
name: Build

on:
  push:
    branches:
    - '**'
    tags-ignore:
    - '**'
    paths-ignore:
    - '**/*.adoc'
    - '**/*.md'
    - '.github/*.yml'
  pull_request:
  workflow_dispatch:
    # https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/

defaults:
  run:
    shell: bash

env:
  TEST_SSH_HOST: 127.0.0.1
  TEST_SSH_PORT: 2222
  TEST_SSH_USER: testuser
  TEST_SSH_KEY_FILE: test/id_key.txt
  TEST_SSH_PUB_FILE: test/id_pub.txt
  TEST_SSH_PW: MySuperPW123

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: "Create Windows testuser for SSH"
      shell: cmd
      run: net user /ADD "${{ env.TEST_SSH_USER }}" "${{ env.TEST_SSH_PW }}"

    - env:
        SHELLOPTS: "igncr"
      run: |
        set -euxo pipefail

        # install PsExec to run sshd as SYSTEM without having to configure it as a system service
        curl -sSfL -o PSTools.zip http://download.sysinternals.com/files/PSTools.zip
        unzip PSTools.zip PsExec64.exe

        chmod 400 $(pwd)/test/*

        /usr/bin/ssh-keygen -A # generate host keys

        cat <<EOF | tee /etc/ssh/sshd_config
        ListenAddress ${{ env.TEST_SSH_HOST }}
        Port ${{ env.TEST_SSH_PORT }}
        PermitRootLogin no
        StrictModes no
        PubkeyAuthentication yes
        IgnoreUserKnownHosts yes
        PasswordAuthentication yes
        PermitEmptyPasswords no
        match User ${{ env.TEST_SSH_USER }}
            AuthorizedKeysFile $(pwd)/${{ env.TEST_SSH_PUB_FILE }}
        EOF

        # prevents setgid: Invalid argument
        mkpasswd -l | tee /etc/passwd
        mkgroup -l > /etc/group

        # launch sshd in background as SYSTEM but print messages to stdout/stderr
        #./PsExec64 -accepteula -s "$(cygpath -w /usr/bin/sshd)" -ddd &
        /usr/bin/sshd -ddd &
        sleep 5

        curl -sSfL -o klink.exe http://www.9bis.net/kitty/files/klink.exe
        echo y | ./klink.exe -auto-store-sshkey \
          -pw ${{ env.TEST_SSH_PW }} \
          -P ${{ env.TEST_SSH_PORT }} \
          ${{ env.TEST_SSH_USER }}@${{ env.TEST_SSH_HOST }} \
          "whoami"